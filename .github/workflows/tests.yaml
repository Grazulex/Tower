name: Run tests with PyTest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
    uv-example:
        name: python
        runs-on: ubuntu-latest
        
        steps:
            - uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v5

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version-file: "pyproject.toml"

            - name: Install the project
              run: uv sync --locked --all-extras --dev

            - name: Run tests
              run: uv run pytest --junit-xml=pytest.xml --cov-report=term-missing:skip-covered  --cov=src | tee pytest-coverage.txt
                
            - name: Pytest coverage comment
              id: coverageComment
              uses: MishaKav/pytest-coverage-comment@main
              with:
                pytest-coverage-path: ./pytest-coverage.txt
                junitxml-path: ./pytest.xml
              
            - name: Check the output coverage
              run: |
                echo "Coverage Percentage - ${{ steps.coverageComment.outputs.coverage }}"
                echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
                echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
                echo "Summary Report - ${{ steps.coverageComment.outputs.summaryReport }}"
              
                echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"
              
                echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
                echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
                echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
                echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
                echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
                echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"